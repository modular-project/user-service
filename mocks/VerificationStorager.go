// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	model "users-service/model"

	mock "github.com/stretchr/testify/mock"
)

// VerificationStorager is an autogenerated mock type for the VerificationStorager type
type VerificationStorager struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *VerificationStorager) Create(_a0 *model.Verification) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Verification) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: UserID
func (_m *VerificationStorager) Delete(UserID uint) error {
	ret := _m.Called(UserID)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint) error); ok {
		r0 = rf(UserID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Find provides a mock function with given fields: UserID
func (_m *VerificationStorager) Find(UserID uint) (model.Verification, error) {
	ret := _m.Called(UserID)

	var r0 model.Verification
	if rf, ok := ret.Get(0).(func(uint) model.Verification); ok {
		r0 = rf(UserID)
	} else {
		r0 = ret.Get(0).(model.Verification)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint) error); ok {
		r1 = rf(UserID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewVerificationStorager interface {
	mock.TestingT
	Cleanup(func())
}

// NewVerificationStorager creates a new instance of VerificationStorager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewVerificationStorager(t mockConstructorTestingTNewVerificationStorager) *VerificationStorager {
	mock := &VerificationStorager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
