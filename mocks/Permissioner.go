// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	model "users-service/model"

	mock "github.com/stretchr/testify/mock"
)

// Permissioner is an autogenerated mock type for the Permissioner type
type Permissioner struct {
	mock.Mock
}

// UserRole provides a mock function with given fields: _a0
func (_m *Permissioner) UserRole(_a0 uint) (model.UserRole, error) {
	ret := _m.Called(_a0)

	var r0 model.UserRole
	if rf, ok := ret.Get(0).(func(uint) model.UserRole); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(model.UserRole)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPermissioner interface {
	mock.TestingT
	Cleanup(func())
}

// NewPermissioner creates a new instance of Permissioner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPermissioner(t mockConstructorTestingTNewPermissioner) *Permissioner {
	mock := &Permissioner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
