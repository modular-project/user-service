// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	multipart "mime/multipart"

	mock "github.com/stretchr/testify/mock"
)

// ImageServicer is an autogenerated mock type for the ImageServicer type
type ImageServicer struct {
	mock.Mock
}

// SaveImg provides a mock function with given fields: _a0, _a1, _a2
func (_m *ImageServicer) SaveImg(_a0 *multipart.FileHeader, _a1 string, _a2 string) (string, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 string
	if rf, ok := ret.Get(0).(func(*multipart.FileHeader, string, string) string); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*multipart.FileHeader, string, string) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewImageServicer interface {
	mock.TestingT
	Cleanup(func())
}

// NewImageServicer creates a new instance of ImageServicer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewImageServicer(t mockConstructorTestingTNewImageServicer) *ImageServicer {
	mock := &ImageServicer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
