// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	model "users-service/model"

	mock "github.com/stretchr/testify/mock"
)

// SignStorager is an autogenerated mock type for the SignStorager type
type SignStorager struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *SignStorager) Create(_a0 *model.LogIn) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.LogIn) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Find provides a mock function with given fields: _a0
func (_m *SignStorager) Find(_a0 string) (model.LogIn, error) {
	ret := _m.Called(_a0)

	var r0 model.LogIn
	if rf, ok := ret.Get(0).(func(string) model.LogIn); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(model.LogIn)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSignStorager interface {
	mock.TestingT
	Cleanup(func())
}

// NewSignStorager creates a new instance of SignStorager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSignStorager(t mockConstructorTestingTNewSignStorager) *SignStorager {
	mock := &SignStorager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
