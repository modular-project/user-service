apiVersion: v1
kind: ConfigMap
metadata:
  name: svc-configmap
data:
  user-svc: user-svc
  info-svc: info-svc
  addr-svc: addr-svc
  ia-svc: ia-svc
  order-svc: order-svc
  front-svc: front-svc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-app
  template:
    metadata:
      labels:
        app: user-app
    spec:
      containers:
      - name: user-app
        image: LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG
        resources:
          requests:
            memory: "64Mi"
            cpu: "10m"
            ephemeral-storage: "64Mi"
          limits:
            memory: "64Mi"
            cpu: "10m"
            ephemeral-storage: "64Mi"
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: GRPC_XDS_BOOTSTRAP
          value: /bootstrap.json
        - name: USER_DB_NAME
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: name
        - name: USER_DB_USER
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: user
        - name: USER_DB_PWD
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: pwd
        - name: USER_DB_HOST
          value: localhost
        - name: USER_DB_PORT
          value: '5432'
        - name: RGE_RSA
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: rsa
        - name: RGE_RSA_PUB
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: rsa_pub
        - name: USER_HOST
          value: localhost
        - name: USER_PORT
          value: '8080'
        - name: USER_OWNER_MAIL
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: owner_mail
        - name: USER_OWNER_PWD
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: owner_pwd
        - name: APP_NAME
          value: Punto y Coma
        - name: INFO_HOST #TODO: UPDATE
          value: info-svc
        - name: INFO_PORT
          value: '3002'
        - name: ORDER_PORT
          value: '3004'
        - name: ADDR_PORT
          value: '3003'
        - name: IA_PORT
          value: '3005'
        - name: ORDER_HOST
          value: order-svc
        - name: ADDR_HOST
          value: addr-svc
        - name: IA_HOST
          value: ia-svc
        - name: MAIL_HOST
          value: smtp.gmail.com
        - name: MAIL_PORT
          value: '465'
        - name: MAIL_NAME
          value: PuntoYComa@mail.com
        - name: MAIL_USER
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: mail_user
        - name: MAIL_PWD
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: mail_pwd
        - name: DRIVE_SECRET
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: drive_secret
        - name: DRIVE_TOKEN
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: drive_token
      - name: user-cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.0.0.preview.0  # make sure the use the latest version
        resources:
          requests:
            memory: "64Mi"
            cpu: "20m"
            ephemeral-storage: "64Mi"
          limits:
            memory: "64Mi"
            cpu: "20m"
            ephemeral-storage: "64Mi"
        args:
          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          - "--private-ip"
          # Enable structured logging with LogEntry format:
          - "--structured-logs"
          - "--port=5432"
          - "woven-fountain-359423:northamerica-northeast1:modular-db-instance"
        
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: false

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: user-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-app
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

---
apiVersion: v1
kind: Service
metadata:
  name: user-svc
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: user-app
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: user-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "user-static-ip"
spec:
  rules:
  - http:
      paths:
      - path: /api/v1/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: user-svc
            port:
              number: 8080
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: front-svc
            port:
              number: 80